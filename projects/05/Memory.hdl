// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output in the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Not(in=address[14], out=NotA1);
    And(a=address[14], b=NotA1, out=SelMem);
    And(a=address[13], b=address[14], out=KeyboardMem);
    
    DMux(in=load, sel=SelMem, a=RamLoad, b=ScreenLoad);
    
    Keyboard(out=KeyboardOut);
    Screen(in=in, address=address[0..12], load=load, out=ScreenOut);
	RAM16K(in=in, address=address[0..13], load=load, out=RamOut);
	
	Mux16(a=RamOut, b=ScreenOut, sel=SelMem, out=TmpOut);
	Mux16(a=TmpOut, b=KeyboardOut, sel=KeyboardMem, out=out);
}
